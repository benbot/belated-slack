c
midTime
exit
midTime
c
time = time.reverse
time.reverse
time
time.reverse
time
exit
Time.strptime(time[0] - Time.now, "%s")
time[0] - Time.now
time
exit
time[0] - DateTime.now
DateTime.now
time[0].inspect
time[0]
Time.now.inspect
Time.now.class
Time.now
DateTime.strptime(time[0] - DateTime.now, "%s")
time[0] - DateTime.now
time[0] - Time.now
time
exit
DateTime.strptime(m["ts"], "%s")
fg
DateTime.strptime(thing[0], "%s")
DateTime.strptime(thing[0])
thing
c
exit
messages.each  {|x| puts x["ts"]}
messages.each do {|x| puts x["ts"]}
messages
exit
resp
c
id
exit
channels[0]
channels
general
exit
resp.body
resp
c
 c
c
messages.sort_by {|x| x["time"].to_f; puts x["time"].to_f }
messages.sort_by {|x| x["time"].to_f; puts x["time"].to_f}
messages.sort_by {|x| x["time"].to_f}
messages.sort_by {|x| -x["time"].to_f}
messages.sort_by {|x| -x["time"]}
messages.sort_by {|x| !x["time"]}
messages.sort_by {|x| x["time"]}
messages.sort_by {|x| x["time
messages.sort
message.sort_by :time
message.sort
messages
c
exit
midTime
midtime
s
t
s
t
s
time
s
exit
t
s
t
s
time
c
exit
messages["time"]
messages
time
step
help
